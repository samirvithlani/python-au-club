#bool

#no1,no2 = no2,no1
3 numbers or 4 number5 

company  budget  15000
5 employee salary 

10000 --> 15000


 25000 --> 15000
 5000 ===> 15000

 50000 --> 15000
 5000 / 5 10000

 90000 --> 15000
 90000 / 5 18000

palindrome
twin
prime
fibonaci series for

amount --> 2550 
2000 * 1
500 * 1
100 *0
50 * 1

#

please enter morning temp 0.1 to 25.30
false  2 chance coreecrt -->
please enter noon temp 10 to 35.30
2 chance

please enter evenng temp 10 to 35.30
2 chance


error -->

#
day --> 1 31
1
month --> 1 12
1
year 1995 - 2022
1 chance

leap year
age year
no months
days 



*
**
***
****
***
**
*

****    
***   
**  
*
**
***
****

      *
     * *
    * * *
     * *  
      *

# typecode 'i' for signed integer find other

array:
even odd
sum sum
print


[10,20,30]
30 -->
array must be uni...

sort --->

last index 
25   25 6 th

list ---> 
remove duplicate element and store it into other list
find second larget element from list dont use sort function.....no built in function
find max element from list....

print only even no using list comprehanion
check all numbers are even or not using list comprehanion


-------------------
user elemets --> tuple...


4 teams
each team 11 players once player registerd can not changed....
2 match should be there 
bw team 1 and 2   if team 1 win 2 points
bw team 3 and 4   if team 3 win 2 points
bw team 1 and 3   if team 1 win 2 points
winner team
man of the match

player name
wickts
runs


count 
count word
count palindrome name from string..
indexOf userDefine
LastIndexOf userDefine



create student managaement application using oops :  vedant
student have fields like name,rollno,marks,grade,email,phone
functionality
1. add student
2. delete student [deleet with name,roleno]
3. update student
4. search student   search with name, rolno, range of marks(eg between 50 to 60)
5. display student
6. exit


create library management application using oops :  devanshi
book have fields like name,author,price,quantity
functionality
1. add book
2. delete book [deleet with name,author]
3. update book
4. search book   search with name, author, range of price(eg between 50 to 60)
5. display book
6. exit

employee management application using oops :  ved
employee have fields like name,empid,designation,salary,phone
functionality
1. add employee
2. delete employee [deleet with name,empid]
3. update employee
4. search employee   search with name, empid, range of salary(eg between 50 to 60)
5. display employee
6. exit








